{"ast":null,"code":"var _jsxFileName = \"/Users/gwyniver.rhy/Development/code/React/bd-news-monorepo/bd-1-news/src/NewsFeed.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cors = require(\"cors\");\n\nconst axios = require(\"axios\");\n\nconst cheerio = require(\"cheerio\");\n\nexport default function NewsFeed({\n  isBDClicked,\n  changeFont\n}) {\n  _s();\n\n  const [formattedArticles, setFormattedArticles] = useState([]); // useEffect(() => {\n  //   (async () => {\n  //     const url = `https://starwarsblog.starwars.com/`;\n  //     try {\n  //       const response = await axios.get(url, {\n  //         method: \"GET\",\n  //         mode: \"cors\",\n  //         headers: { crossorigin: true },\n  //       });\n  //       const $ = cheerio.load(\n  //         response.set(\"Access-Control-Allow-Origin\", \"*\").data\n  //       );\n  //       const scrapedArticles = $(\"ul.news-articles>li>article\");\n  //       console.log(scrapedArticles);\n  //       const newFormattedArticles = scrapedArticles.map((_index, article) => ({\n  //         title: article.children?.[1]?.children?.[1]?.attribs?.title,\n  //         link: article.children?.[1]?.children?.[1]?.attribs?.href,\n  //         imageSrc:\n  //           article.children?.[1]?.children?.[1]?.children?.[1]?.attribs?.[\n  //             \"data-original\"\n  //           ],\n  //         tagLine:\n  //           article.children?.[3]?.children?.[3]?.children?.[1]?.children?.[0]\n  //             ?.data,\n  //         byLineAuthor:\n  //           article.children?.[3]?.children?.[5]?.children?.[1].children?.[1]\n  //             ?.attribs?.title,\n  //         byLineDate:\n  //           article.children?.[3]?.children?.[5]?.children?.[3].children?.[1]\n  //             ?.data,\n  //       }));\n  //     } catch (e) {\n  //       console.error(`Error while fetching   - ${e.message}`);\n  //     }\n  //   })();\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(newFormattedArticles => setFormattedArticles([...newFormattedArticles]));\n  }); // setFormattedArticles([...newFormattedArticles]);\n\n  useEffect(() => {\n    console.log(\"sanity\", formattedArticles);\n  }, [formattedArticles]);\n  console.log(formattedArticles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isBDClicked ? \"NewsFeedVisible\" : \"NewsFeedInvisible\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isBDClicked ? \"NewsFeedOn\" : \"NewsFeedOff\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: formattedArticles.filter(formattedArticle => formattedArticle.title !== undefined).map((formattedArticle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: formattedArticle.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: formattedArticle.imageSrc,\n              alt: formattedArticle.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              webkitTextStrokeColor: changeFont ? \"transparent\" : \"rgb(219, 190, 24)\",\n              lineHeight: changeFont ? \"\" : \"1.15em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: formattedArticle.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: formattedArticle.title.replace(\"#\", \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formattedArticle.tagLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [formattedArticle.byLineAuthor.replace(\"Posts by\", \"article by\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), formattedArticle.byLineDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewsFeed, \"OJ1BaRxBOGB+VrbRTc7wf/wSzRg=\");\n\n_c = NewsFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"sources":["/Users/gwyniver.rhy/Development/code/React/bd-news-monorepo/bd-1-news/src/NewsFeed.js"],"names":["useEffect","useState","cors","require","axios","cheerio","NewsFeed","isBDClicked","changeFont","formattedArticles","setFormattedArticles","fetch","then","response","json","newFormattedArticles","console","log","filter","formattedArticle","title","undefined","map","index","link","imageSrc","webkitTextStrokeColor","lineHeight","replace","tagLine","byLineAuthor","byLineDate"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst cheerio = require(\"cheerio\");\n\nexport default function NewsFeed({ isBDClicked, changeFont }) {\n  const [formattedArticles, setFormattedArticles] = useState([]);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const url = `https://starwarsblog.starwars.com/`;\n\n  //     try {\n  //       const response = await axios.get(url, {\n  //         method: \"GET\",\n  //         mode: \"cors\",\n  //         headers: { crossorigin: true },\n  //       });\n\n  //       const $ = cheerio.load(\n  //         response.set(\"Access-Control-Allow-Origin\", \"*\").data\n  //       );\n\n  //       const scrapedArticles = $(\"ul.news-articles>li>article\");\n  //       console.log(scrapedArticles);\n  //       const newFormattedArticles = scrapedArticles.map((_index, article) => ({\n  //         title: article.children?.[1]?.children?.[1]?.attribs?.title,\n  //         link: article.children?.[1]?.children?.[1]?.attribs?.href,\n  //         imageSrc:\n  //           article.children?.[1]?.children?.[1]?.children?.[1]?.attribs?.[\n  //             \"data-original\"\n  //           ],\n  //         tagLine:\n  //           article.children?.[3]?.children?.[3]?.children?.[1]?.children?.[0]\n  //             ?.data,\n  //         byLineAuthor:\n  //           article.children?.[3]?.children?.[5]?.children?.[1].children?.[1]\n  //             ?.attribs?.title,\n  //         byLineDate:\n  //           article.children?.[3]?.children?.[5]?.children?.[3].children?.[1]\n  //             ?.data,\n  //       }));\n  //     } catch (e) {\n  //       console.error(`Error while fetching   - ${e.message}`);\n  //     }\n  //   })();\n  // }, []);\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((response) => response.json())\n      .then((newFormattedArticles) =>\n        setFormattedArticles([...newFormattedArticles])\n      );\n  });\n\n  // setFormattedArticles([...newFormattedArticles]);\n\n  useEffect(() => {\n    console.log(\"sanity\", formattedArticles);\n  }, [formattedArticles]);\n\n  console.log(formattedArticles);\n\n  return (\n    <div className={isBDClicked ? \"NewsFeedVisible\" : \"NewsFeedInvisible\"}>\n      <div className={isBDClicked ? \"NewsFeedOn\" : \"NewsFeedOff\"}>\n        <ul>\n          {formattedArticles\n            .filter((formattedArticle) => formattedArticle.title !== undefined)\n            .map((formattedArticle, index) => (\n              <li key={index}>\n                <a\n                  href={formattedArticle.link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    src={formattedArticle.imageSrc}\n                    alt={formattedArticle.title}\n                  />\n                </a>\n                <h1\n                  style={{\n                    webkitTextStrokeColor: changeFont\n                      ? \"transparent\"\n                      : \"rgb(219, 190, 24)\",\n                    lineHeight: changeFont ? \"\" : \"1.15em\",\n                  }}\n                >\n                  <a\n                    href={formattedArticle.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {formattedArticle.title.replace(\"#\", \"\")}\n                  </a>\n                </h1>\n                <p>{formattedArticle.tagLine}</p>\n                <p>\n                  <small>\n                    {formattedArticle.byLineAuthor.replace(\n                      \"Posts by\",\n                      \"article by\"\n                    )}\n                    <br />\n                    {formattedArticle.byLineDate}\n                  </small>\n                </p>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}