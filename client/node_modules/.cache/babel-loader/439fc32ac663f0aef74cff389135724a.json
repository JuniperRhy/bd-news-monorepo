{"ast":null,"code":"var _jsxFileName = \"/Users/gwyniver.rhy/Development/code/React/bd-news-monorepo/client/src/NewsFeed.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cors = require(\"cors\");\n\nconst axios = require(\"axios\");\n\nconst cheerio = require(\"cheerio\");\n\nexport default function NewsFeed({\n  isBDClicked,\n  changeFont,\n  hyperdrive\n}) {\n  _s();\n\n  const [formattedArticles, setFormattedArticles] = useState([]);\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(newFormattedArticles => setFormattedArticles([...newFormattedArticles]));\n  }); // console.log(formattedArticles, \"api test\");\n  // useEffect(() => {\n  //   console.log(\"sanity\", formattedArticles);\n  // }, [formattedArticles]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isBDClicked ? \"NewsFeedVisible\" : \"NewsFeedInvisible\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isBDClicked ? \"NewsFeedOn\" : \"NewsFeedOff\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: formattedArticles.filter(formattedArticle => formattedArticle.title && // formattedArticle.tagLine &&\n        formattedArticle.byLineAuthor !== undefined).map((formattedArticle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: formattedArticle.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            onClick: () => hyperdrive.play(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: formattedArticle.imageSrc,\n              alt: formattedArticle.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: () => hyperdrive.play(),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: formattedArticle.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: formattedArticle.title.replace(\"#\", \"\").replace(\"&\", \"and\").replace(\"!\", \"\").replace(\"?\", \"\").replace(`”`, ``).replace(`“`, ``)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formattedArticle.tagLine && formattedArticle.tagLine.length > 10 ? formattedArticle.tagLine.replace(\"!\", \"\").replace(\"#\", \"number \") : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [formattedArticle.byLineAuthor.replace(\"Posts by\", \"article by\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), formattedArticle.byLineDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewsFeed, \"J6hDh8mxJCPzK4EgQaOxXFvfw/8=\");\n\n_c = NewsFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsFeed\");","map":{"version":3,"sources":["/Users/gwyniver.rhy/Development/code/React/bd-news-monorepo/client/src/NewsFeed.js"],"names":["useEffect","useState","cors","require","axios","cheerio","NewsFeed","isBDClicked","changeFont","hyperdrive","formattedArticles","setFormattedArticles","fetch","then","response","json","newFormattedArticles","filter","formattedArticle","title","byLineAuthor","undefined","map","index","link","play","imageSrc","replace","tagLine","length","byLineDate"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nconst cors = require(\"cors\");\nconst axios = require(\"axios\");\nconst cheerio = require(\"cheerio\");\n\nexport default function NewsFeed({ isBDClicked, changeFont, hyperdrive }) {\n  const [formattedArticles, setFormattedArticles] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((response) => response.json())\n      .then((newFormattedArticles) =>\n        setFormattedArticles([...newFormattedArticles])\n      );\n  });\n\n  // console.log(formattedArticles, \"api test\");\n\n  // useEffect(() => {\n  //   console.log(\"sanity\", formattedArticles);\n  // }, [formattedArticles]);\n\n  return (\n    <div className={isBDClicked ? \"NewsFeedVisible\" : \"NewsFeedInvisible\"}>\n      <div className={isBDClicked ? \"NewsFeedOn\" : \"NewsFeedOff\"}>\n        <ul>\n          {formattedArticles\n            .filter(\n              (formattedArticle) =>\n                formattedArticle.title &&\n                // formattedArticle.tagLine &&\n                formattedArticle.byLineAuthor !== undefined\n            )\n            .map((formattedArticle, index) => (\n              <li key={index}>\n                <a\n                  href={formattedArticle.link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={() => hyperdrive.play()}\n                >\n                  <img\n                    src={formattedArticle.imageSrc}\n                    alt={formattedArticle.title}\n                  />\n                </a>\n                <h1 onClick={() => hyperdrive.play()}>\n                  <a\n                    href={formattedArticle.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {formattedArticle.title\n                      .replace(\"#\", \"\")\n                      .replace(\"&\", \"and\")\n                      .replace(\"!\", \"\")\n                      .replace(\"?\", \"\")\n                      .replace(`”`, ``)\n                      .replace(`“`, ``)}\n                  </a>\n                </h1>\n                <p>\n                  {formattedArticle.tagLine &&\n                  formattedArticle.tagLine.length > 10\n                    ? formattedArticle.tagLine\n                        .replace(\"!\", \"\")\n                        .replace(\"#\", \"number \")\n                    : \"\"}\n                </p>\n\n                <small>\n                  {formattedArticle.byLineAuthor.replace(\n                    \"Posts by\",\n                    \"article by\"\n                  )}\n                  <br />\n                  {formattedArticle.byLineDate}\n                </small>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}